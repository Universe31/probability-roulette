#include <iostream>
#include <cstdlib>
#include <cmath>
#include <time.h>
#include <string>

int main() {
  //Declarations for user input valued
  char ynend = 'y';
  int usernum;
  int newpoints = 0;
  int userpoints = 0;
  char userlet;
  char ynstart = 'n';
  std::string usercol;
  
  //Game loop
while (ynend == 'y'){
  
  //User input interface
  while (ynstart == 'n') {
  std::cout << "---------------------- Probability ----------------------\n" ;
  std::cout << "----------------------  Roulette!  ----------------------\n" ;
  std::cout << "\nHow to play:\nPlace a bet, then pick a letter, color, and number. Type all answers in lowercase. The house will pick a random set too. \nWe have to match for you to win. Winning rules are as follows:\n If you we don't match at all, you lose your bet.\n If we only match once, you keep your bet and it stays the same.\n If we match twice, your bet doubles.\n If we match all three times, your bet quadruples!\n";
  std::cout << "\nAre you ready to play? Y/N \n" ;
  std::cin >> ynstart ;
  } ; 
  
  //To make sure the bet is above 50
  while (userpoints < 50) {
  userpoints = 0;
  std::cout << "\n\nHow much are you betting? (Min. $50)\n" ;
  std::cout << "You already have $" << newpoints << "\n";
  std::cin >> userpoints;
  } ;
  
  userpoints = userpoints + newpoints;
  std::cout << "\nPick a number between 1 & 4: " ;
  std::cin >> usernum ;
  std::cout << "Pick a letter between A & D: " ;
  std::cin >> userlet ;
  std::cout << "Pick a color: " ;
  std::cout << "\n Black \n Red \n Green \n Blue \nYour color choice: " ;
  std::cin >> usercol ;
    
  //Roulette with random number generators, two numbers between 1 and 4. Int to char conversion further down.
  srand (time(NULL));
  int number = rand() % 4 + 1;
  int letter = rand() % 4 + 1;
  int color = rand() % 4 + 1;
    
  /*Switch for determining if usernum value is between 1 & 4
 switch (usernum){
     case 1:
      return true;
      break;
     case 2:
      return true;
      break;
     case 3:
      return true;
      break;
     case 4:
      return true;
      break;
     default:
      std::cout << "There was an error, please restart by pressing 'run'. \n" ;
      return false;
      break;
 } ;
*/

  //Roulette number display
  std::cout << "\n\nThe house's number is: " << number << ". You picked: " << usernum << "\n"; 
  
  //Roulette letter display, uses switch to convert int-letter integer to word
 switch (letter){
      case 1:
        std::cout << "The house's letter is A. You picked: " << userlet << "\n";
        break;
      case 2:
        std::cout << "The house's letter is B. You picked: " << userlet << "\n";
        break;
      case 3:
        std::cout << "The house's letter is C. You picked: " << userlet << "\n";
        break;
      case 4:
        std::cout << "The house's letter is D. You picked: " << userlet << "\n";
        break;
      }
 
  //Roulette color display, uses switch to convert int-color integer to word
  switch (color){
      case 1:
        std::cout << "The house's color is black. You picked: " << usercol << "\n\n";
        break;
      case 2:
        std::cout << "The house's color is red. You picked: " << usercol << "\n\n";
        break;
      case 3:
        std::cout << "The house's color is green. You picked: " << usercol << "\n\n";
        break;
      case 4:
        std::cout << "The house's color is blue. You picked: " << usercol << "\n\n";
        break;
        
      }
      
  //Variables for text conversion and calculation
  
  int calclet = 0;
  int calccol = 0;
  
  //Converting user-inputter letter to integer variable
  switch (userlet){
    case 'a': 
        calclet = calclet + 1;
        break;
    case 'b':
        calclet = calclet + 2;
        break;
    case 'c': 
        calclet = calclet + 3;
        break;
    case 'd':
        calclet = calclet + 4;
        break;   
    default :
        //std::cout << "There was an error, please restart by pressing 'run'. \n" ;
        //return false;
        break;
  } ;
  
  //Converting user-inputted color to integer-variable
  if (usercol == "black") {
      calccol = calccol + 1;
  } else if (usercol == "red") {
      calccol = calccol + 2;
  } else if (usercol == "green"){
      calccol = calccol + 3;
  } else if (usercol == "blue"){
      calccol = calccol + 4;
  } else {
      //std::cout << "There was an error, please restart by pressing 'run'. \n" ;
      //return false;
      };
  
 //If statement for determining win amount
if (calccol == color && calclet == letter && usernum == number) {
    newpoints = userpoints * 4 ;
    std::cout << "You got all three guesses correct! You won $" << newpoints << "!\n" ;
//Below is 2/3 correct elseif statements
//
} else if (calccol == color && calclet == letter && usernum != number) {
    newpoints = userpoints * 2 ;
    std::cout << "You only got two out of three guesses correct! You won $" << newpoints << "!\n" ;
} else if (calccol == color && calclet != letter && usernum == number) {
    newpoints = userpoints * 2 ;
    std::cout << "You only got two out of three guesses correct! You won $" << newpoints << "!\n" ;
} else if (calccol != color && calclet == letter && usernum == number) {
    newpoints = userpoints * 2 ;
    std::cout << "You only got two out of three guesses correct! You won $" << newpoints << "!\n" ;
//Below is the 1/3 correct elseif statements
//
} else if (calccol == color && calclet != letter && usernum != number) {
    newpoints = userpoints * 1 ;
    std::cout << "You only got one out of three guesses correct, your bet stays the same!\n" ;
} else if (calccol != color && calclet != letter && usernum == number) {
    newpoints = userpoints * 1 ;
    std::cout << "You only got one out of three guesses correct, your bet stays the same!\n" ;
} else if (calccol != color && calclet == letter && usernum != number) {
    newpoints = userpoints * 1 ;
    std::cout << "You only got one out of three guesses correct, your bet stays the same!\n" ;
//Below is all incorrect elseif 
//
} else if (calccol != color && calclet != letter && usernum != number) {
    newpoints = userpoints * 0 ;
    std::cout << "You didn't guess anything correct, you've lost your bet!\n" ;
//Below is incase of incorrect input
//
} else {
    std::cout << "There was an error, please restart.\n" ;
} ;

//Final statements before restart option
std::cout << "\n\nStarting bet amount: $" << userpoints;
std::cout << "\nCurrent bet amount: $" << newpoints;
std::cout << "\n\nThanks for playing! Would you like to play again? Y/N \n" ;
std::cin >> ynend ;

};

int totpoints = newpoints ;
std::cout << "\n\nYou walk away with $" << totpoints << "!" ;

return 0;
}

//Link to cpp.sh: http://cpp.sh/9dg5x2
